#!/bin/bash

# Collect server power info you can only grab as root.
# Supports Linux and MacOS Darwin.
#
# Suggested install directory is /usr/local/bin
#
# Starting from a checkout of pgbench-tools into the postgres user's home directory, you
# likely need to run sudo as another user to install this, then add a sudo rule to allow
# the postgres user to run it.  This idiom works here:
#
#    cp util/bench_powermon /tmp
#    logout
#    sudo cp /tmp/bench_powermon /usr/local/bin/
#    sudo sh -c "echo \"postgres ALL = (ALL) NOPASSWD: /usr/local/bin/bench_powermon\" >> /etc/sudoers.d/postgres"
#

OS=`uname`

if [ "$OS" = "Linux" ] ; then
	sudo turbostat -S --quiet  --interval 1 --enable Time_Of_Day_Seconds --hide "IRQ,POLL,POLL%,IPC,C1,C2,C1%,C2%,SMI,C1ACPI,C2ACPI,C3ACPI,C1ACPI%,C2ACPI%,C3ACPI%,CPU%c1,CPU%c6,CPU%c7,CoreThr,Totl%C0,Any%C0,GFX%C0,CPUGFX%,Pkg%pc2,Pkg%pc3,Pkg%pc6,Pkg%pc8,Pk%pc10,CPU%LPI,SYS%LPI,PKG_%,RAM_%,TSC_MHz"
elif [ "$OS" = "Darwin" ] ; then
	sudo /usr/bin/powermetrics -i 1000 --samplers cpu_power -a1 --hide-cpu-duty-cycle | egrep -v "residency|online"
else
	echo Unsupported OS:  $OS
	exit 1
fi

